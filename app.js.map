{"version":3,"file":"app.js","mappings":"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","sources":["webpack://TS Tetris/./src/ts/Block.ts","webpack://TS Tetris/./src/ts/Config.ts","webpack://TS Tetris/./src/ts/Game.ts","webpack://TS Tetris/./src/ts/Scenes/Boot.ts","webpack://TS Tetris/./src/ts/Scenes/MainGame.ts","webpack://TS Tetris/./src/ts/Scenes/MainMenu.ts","webpack://TS Tetris/./src/ts/Scenes/MainSettings.ts","webpack://TS Tetris/./src/ts/Scenes/Preloader.ts","webpack://TS Tetris/./src/ts/Scenes/SplashScreen.ts","webpack://TS Tetris/./src/ts/Utilities.ts","webpack://TS Tetris/external var \"Phaser\"","webpack://TS Tetris/webpack/bootstrap","webpack://TS Tetris/webpack/startup"],"sourcesContent":["import 'phaser';\r\nimport Config from \"./Config\"\r\nimport MainGame from \"./Scenes/MainGame\";\r\n\r\nexport default class Block {\r\n\tprivate images: Phaser.GameObjects.Image[][] = [];\r\n\t\r\n\tconstructor(\r\n\t\tpublic shape: number,\r\n\t\tpublic rotation: number,\r\n\t\tpublic x: number,\r\n\t\tpublic y: number,\r\n\t\tpublic color: number,\r\n\t\tpublic game: MainGame\r\n\t){}\r\n\t\r\n\tpublic init(): void {\r\n\t\tfor (let x = 0; x < 4; ++x) {\r\n\t\t\tthis.images[x] = [];\r\n\t\t\tfor (let y = 0; y < 4; ++y) {\r\n\t\t\t\tthis.images[x][y] = this.game.add.image(x * Config.blockSize, y * Config.blockSize, \"blocks\");\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.setPosition(this.x, this.y);\r\n\t\tthis.setShape(this.shape, this.rotation);\r\n\t\tthis.setColor(this.color);\r\n\t}\r\n\r\n\tpublic setColor(color: number) {\r\n\t\tthis.color = color == -1 ? Config.emptyBlockIx : color;\r\n\t\tfor (let y = 0; y < 4; ++y) {\r\n\t\t\tfor (let x = 0; x < 4; ++x) {\r\n\t\t\t\tthis.images[x][y].setFrame(this.color);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic setPosition(x: number, y: number): void {\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tconst offset = this.game.getTileMapOffset();\r\n\t\tfor (let dy = 0; dy < 4; ++dy) {\r\n\t\t\tfor (let dx = 0; dx < 4; ++dx) {\t\t\t\t\r\n\t\t\t\tthis.images[dx][dy].setX((x + dx - 0.5) * Config.blockSize + offset.x);\r\n\t\t\t\tthis.images[dx][dy].setY((Config.height - (y + dy) + 1.5) * Config.blockSize + offset.y);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic setShape(shape: number, rotation: number): void {\r\n\t\tthis.shape = shape;\r\n\t\tthis.rotation = rotation;\r\n\r\n\t\tif (shape < 0) {\r\n\t\t\tfor (let dx = 0; dx < 4; ++dx) {\r\n\t\t\t\tfor (let dy = 0; dy < 4; ++dy) {\t\t\t\r\n\t\t\t\t\tthis.images[dx][dy].setAlpha(0);\r\n\t\t\t\t}\r\n\t\t\t}\t\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tfor (let dx = 0; dx < 4; ++dx) {\r\n\t\t\tfor (let dy = 0; dy < 4; ++dy) {\t\t\t\r\n\t\t\t\tconst isBlock = Block.shapes[this.shape][this.rotation][dx][dy] == 1 ? true : false;\r\n\t\t\t\tthis.images[dx][dy].setAlpha(isBlock ? 1 : 0);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// [7][4][4][4]\r\n\tstatic shapes: number[][][][] = [    \r\n\t\r\n\t\t// O-block\r\n\t\t[[\r\n\t\t\t[0,0,0,0],\r\n\t\t\t[0,1,1,0],\r\n\t\t\t[0,1,1,0],\r\n\t\t\t[0,0,0,0]\r\n\t\t],[\r\n\t\t\t[0,0,0,0],\r\n\t\t\t[0,1,1,0],\r\n\t\t\t[0,1,1,0],\r\n\t\t\t[0,0,0,0]\r\n\t\t],[\r\n\t\t\t[0,0,0,0],\r\n\t\t\t[0,1,1,0],\r\n\t\t\t[0,1,1,0],\r\n\t\t\t[0,0,0,0]\r\n\t\t],[\r\n\t\t\t[0,0,0,0],\r\n\t\t\t[0,1,1,0],\r\n\t\t\t[0,1,1,0],\r\n\t\t\t[0,0,0,0]\r\n\t\t]],\r\n\r\n\t\t// I-block\r\n\t\t[[\r\n\t\t\t[0,0,0,0],\r\n\t\t\t[1,1,1,1],\r\n\t\t\t[0,0,0,0],\r\n\t\t\t[0,0,0,0]\r\n\t\t],[\r\n\t\t\t[0,0,1,0],\r\n\t\t\t[0,0,1,0],\r\n\t\t\t[0,0,1,0],\r\n\t\t\t[0,0,1,0]\r\n\t\t],[\r\n\t\t\t[0,0,0,0],\r\n\t\t\t[1,1,1,1],\r\n\t\t\t[0,0,0,0],\r\n\t\t\t[0,0,0,0]\r\n\t\t],[\r\n\t\t\t[0,0,1,0],\r\n\t\t\t[0,0,1,0],\r\n\t\t\t[0,0,1,0],\r\n\t\t\t[0,0,1,0]\r\n\t\t]],\r\n\r\n\t\t// S-block\r\n\t\t[[\r\n\t\t\t[0,0,0,0],\r\n\t\t\t[0,0,1,1],\r\n\t\t\t[0,1,1,0],\r\n\t\t\t[0,0,0,0]\r\n\t\t],[\r\n\t\t\t[0,0,1,0],\r\n\t\t\t[0,0,1,1],\r\n\t\t\t[0,0,0,1],\r\n\t\t\t[0,0,0,0]\r\n\t\t],[\r\n\t\t\t[0,0,0,0],\r\n\t\t\t[0,0,1,1],\r\n\t\t\t[0,1,1,0],\r\n\t\t\t[0,0,0,0]\r\n\t\t],[\r\n\t\t\t[0,0,1,0],\r\n\t\t\t[0,0,1,1],\r\n\t\t\t[0,0,0,1],\r\n\t\t\t[0,0,0,0]\r\n\t\t]],\r\n\r\n\t\t// Z-block\r\n\t\t[[\r\n\t\t\t[0,0,0,0],\r\n\t\t\t[0,1,1,0],\r\n\t\t\t[0,0,1,1],\r\n\t\t\t[0,0,0,0]\r\n\t\t],[\r\n\t\t\t[0,0,0,1],\r\n\t\t\t[0,0,1,1],\r\n\t\t\t[0,0,1,0],\r\n\t\t\t[0,0,0,0]\r\n\t\t],[\r\n\t\t\t[0,0,0,0],\r\n\t\t\t[0,1,1,0],\r\n\t\t\t[0,0,1,1],\r\n\t\t\t[0,0,0,0]\r\n\t\t],[\r\n\t\t\t[0,0,0,1],\r\n\t\t\t[0,0,1,1],\r\n\t\t\t[0,0,1,0],\r\n\t\t\t[0,0,0,0]\r\n\t\t]],\r\n\r\n\t\t// L-block\r\n\t\t[[\r\n\t\t\t[0,0,0,0],\r\n\t\t\t[0,1,1,1],\r\n\t\t\t[0,1,0,0],\r\n\t\t\t[0,0,0,0],\r\n\t\t],[\r\n\t\t\t[0,0,1,0],\r\n\t\t\t[0,0,1,0],\r\n\t\t\t[0,0,1,1],\r\n\t\t\t[0,0,0,0],\r\n\t\t],[\r\n\t\t\t[0,0,0,1],\r\n\t\t\t[0,1,1,1],\r\n\t\t\t[0,0,0,0],\r\n\t\t\t[0,0,0,0],\r\n\t\t],[\r\n\t\t\t[0,1,1,0],\r\n\t\t\t[0,0,1,0],\r\n\t\t\t[0,0,1,0],\r\n\t\t\t[0,0,0,0]\r\n\t\t]],\r\n\r\n\t\t// J-block\r\n\t\t[[\r\n\t\t\t[0,0,0,0],\r\n\t\t\t[0,1,1,1],\r\n\t\t\t[0,0,0,1],\r\n\t\t\t[0,0,0,0]\r\n\t\t],[\r\n\t\t\t[0,0,1,1],\r\n\t\t\t[0,0,1,0],\r\n\t\t\t[0,0,1,0],\r\n\t\t\t[0,0,0,0]\r\n\t\t],[\r\n\t\t\t[0,1,0,0],\r\n\t\t\t[0,1,1,1],\r\n\t\t\t[0,0,0,0],\r\n\t\t\t[0,0,0,0]\r\n\t\t],[\r\n\t\t\t[0,0,1,0],\r\n\t\t\t[0,0,1,0],\r\n\t\t\t[0,1,1,0],\r\n\t\t\t[0,0,0,0]\r\n\t\t]],\r\n\r\n\t\t// T-block\r\n\t\t[[\r\n\t\t\t[0,0,0,0],\r\n\t\t\t[0,1,1,1],\r\n\t\t\t[0,0,1,0],\r\n\t\t\t[0,0,0,0]\r\n\t\t],[\r\n\t\t\t[0,0,1,0],\r\n\t\t\t[0,0,1,1],\r\n\t\t\t[0,0,1,0],\r\n\t\t\t[0,0,0,0]\r\n\t\t],[\r\n\t\t\t[0,0,1,0],\r\n\t\t\t[0,1,1,1],\r\n\t\t\t[0,0,0,0],\r\n\t\t\t[0,0,0,0]\r\n\t\t],[\r\n\t\t\t[0,0,1,0],\r\n\t\t\t[0,1,1,0],\r\n\t\t\t[0,0,1,0],\r\n\t\t\t[0,0,0,0]\r\n\t\t]]\r\n\t];\r\n}\r\n","export default class Config {\r\n\tpublic static width = 10;\r\n\tpublic static height = 20;\r\n\tpublic static blockSize = 24;\r\n\tpublic static emptyBlockIx = 8;\r\n\tpublic static borderBlockIx = 9; \r\n}\r\n","import 'phaser';\nimport Boot from \"./Scenes/Boot\";\nimport Preloader from \"./Scenes/Preloader\";\nimport MainMenu from \"./Scenes/MainMenu\";\nimport SplashScreen from \"./Scenes/SplashScreen\";\nimport Utilities from \"./Utilities\";\nimport MainGame from \"./Scenes/MainGame\";\nimport MainSettings from \"./Scenes/MainSettings\";\n\nconst gameConfig: Phaser.Types.Core.GameConfig = {\n\twidth: 800,\n\theight: 600,\n\ttype: Phaser.AUTO,\n\tparent: \"content\",\n\ttitle: \"TS Tetris by Antti Alkkiomäki\"\n};\n\nexport default class Game extends Phaser.Game {\n\tconstructor(config: Phaser.Types.Core.GameConfig) {\n\t\tUtilities.LogSceneMethodEntry(\"Game\", \"constructor\");\n\n\t\tsuper(config);\n\n\t\tthis.scene.add(Boot.Name, Boot);\n\t\tthis.scene.add(Preloader.Name, Preloader);\n\t\tthis.scene.add(SplashScreen.Name, SplashScreen);\n\t\tthis.scene.add(MainMenu.Name, MainMenu);\n\t\tthis.scene.add(MainGame.Name, MainGame);\n\t\tthis.scene.add(MainSettings.Name, MainSettings);\n\t\tthis.scene.start(Boot.Name);\n\t}\n}\n\n/**\n * Workaround for inability to scale in Phaser 3.\n * From http://www.emanueleferonato.com/2018/02/16/how-to-scale-your-html5-games-if-your-framework-does-not-feature-a-scale-manager-or-if-you-do-not-use-any-framework/\n */\nfunction resize(): void {\n\tconst canvas = document.querySelector(\"canvas\");\n\tconst width = window.innerWidth;\n\tconst height = window.innerHeight;\n\tconst wratio = width / height;\n\tconst ratio = Number(gameConfig.width) / Number(gameConfig.height);\n\tif (wratio < ratio) {\n\t\tcanvas.style.width = width + \"px\";\n\t\tcanvas.style.height = (width / ratio) + \"px\";\n\t} else {\n\t\tcanvas.style.width = (height * ratio) + \"px\";\n\t\tcanvas.style.height = height + \"px\";\n\t}\n}\n\nwindow.onload = (): void => {\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tconst game = new Game(gameConfig);\n\t// Uncomment the following two lines if you want the game to scale to fill the entire page, but keep the game ratio.\n\t//resize();\n\t//window.addEventListener(\"resize\", resize, true);\n};\n","import Preloader from \"./Preloader\";\nimport Utilities from \"../Utilities\";\n\nexport default class Boot extends Phaser.Scene {\n\tpublic static Name = \"Boot\";\n\n\tpublic preload(): void {\n\t}\n\n\tpublic create(): void {\n\t\tUtilities.LogSceneMethodEntry(\"Boot\", \"create\");\n\t\tthis.scene.start(Preloader.Name);\n\t}\n}\n","import Utilities from \"../Utilities\";\nimport Block from \"../Block\";\nimport Config from \"../Config\";\n\nexport default class MainGame extends Phaser.Scene {\n\tpublic static Name = \"MainGame\";\n\n\tprivate gameArea: number[][] = [];\n\tprivate currentBlock = new Block(-1, 0, 0, 0, 0, this);\n\tprivate nextBlock: [Block, Block, Block] = [null, null, null];\n\tprivate nextShape: [number, number, number] = [0, 0, 0];\n\tprivate nextColor: [number, number, number] = [0, 0, 0];\n\tprivate lastMoveTime: number;\n\tprivate moveUpdateDelay = 300;\n\tprivate fallSpeed = 0;\n\tprivate isGameOver = true;\n\tprivate leftTimer = 0.0;\n\tprivate rightTimer = 0.0; \n\tprivate score = 0;\n\tprivate previousScore = 0;\n\tprivate highscore = 0;  \n\tprivate layer: Phaser.Tilemaps.TilemapLayer;\n\tprivate scoreText: Phaser.GameObjects.Text;\n\tprivate highscoreText: Phaser.GameObjects.Text;\n\tprivate gameOverText: Phaser.GameObjects.Text;\n\tprivate restartText: Phaser.GameObjects.Text;\n\n\tprivate enterKey: Phaser.Input.Keyboard.Key;\n\tprivate leftKey: Phaser.Input.Keyboard.Key;\n\tprivate rightKey: Phaser.Input.Keyboard.Key;\n\tprivate upKey: Phaser.Input.Keyboard.Key;\n\tprivate downKey: Phaser.Input.Keyboard.Key;\n\t\n\tpublic create(): void {\n\t\tUtilities.LogSceneMethodEntry(\"MainGame\", \"create\");\n\t\tthis.add.image(this.cameras.main.centerX, this.cameras.main.centerY, \"background\");\n\t\tthis.createTileMap();\n\t\tthis.createTexts();\n\t\tthis.currentBlock.init();\n\t\tthis.initGame();\n\n\t\tthis.enterKey = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.ENTER);\n\t\tthis.leftKey = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.LEFT);\n\t\tthis.rightKey = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.RIGHT);\n\t\tthis.upKey = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.UP);\n\t\tthis.downKey = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.DOWN);\n\t}\n\t\n\tprivate createTileMap(): void {\n\t\tconst offset = this.getTileMapOffset();\n\n\t\tconst map = this.make.tilemap({ width: Config.width + 2, height: Config.height + 1, tileWidth: Config.blockSize, tileHeight: Config.blockSize });\n\t\tconst tiles = map.addTilesetImage('blocks', null, Config.blockSize, Config.blockSize);\n\t\tthis.layer = map.createBlankLayer('layer1', tiles, offset.x, offset.y);\n\t\t\n\t\t// fill borders\n\t\tthis.layer.fill(Config.borderBlockIx, 0, 0, 1, Config.height);\n\t\tthis.layer.fill(Config.borderBlockIx, Config.width + 1, 0, 1, Config.height);\n\t\tthis.layer.fill(Config.borderBlockIx, 0, Config.height, Config.width + 2, 1);\n\t\t\n\t\t// fill game area with empty blocks\n\t\tthis.layer.fill(Config.emptyBlockIx, 1, 0, Config.width, Config.height);\t\n\t\t\n\t\t//this.layer.randomize(0, 0, map.width, map.height, [ 0, 1, 2, 3, 4 ]);\n\t}\n\n\tprivate createTexts(): void {\n\t\tconst x = 600;\n\t\tconst y = 180;\n\n\t\tthis.highscoreText = this.add.text(x, y, \"HI-SCORE\\n\" + this.highscore, { align: \"left\"})\n\t\t\t.setFontFamily(\"monospace\").setFontSize(22).setFill(\"#fedb4f\");\n\n\t\tthis.scoreText = this.add.text(x, y + 70, \"SCORE\\n0\", { align: \"left\"})\n\t\t\t.setFontFamily(\"monospace\").setFontSize(22).setFill(\"#fff\");\n\n\t\tthis.gameOverText = this.add.text(x, y + 140, \"\", { align: \"left\"})\n\t\t\t.setFontFamily(\"monospace\").setFontSize(22).setFill(\"#ff1a6b\");\n\n\t\tthis.restartText = this.add.text(400, 570, \"\", { align: \"center\"})\n\t\t\t.setOrigin(0.5, 0.5)\n\t\t\t.setFontFamily(\"monospace\").setFontSize(22).setFill(\"#676767\");\n\t}\n\n\tpublic getTileMapOffset(): { x: number, y:number } {\n\t\treturn { \n\t\t\tx: this.cameras.main.centerX - Config.width * Config.blockSize / 2 - Config.blockSize,\n\t\t\ty: this.cameras.main.centerY - (Config.height + 1) * Config.blockSize / 2\n\t\t};\n\t}\n\n\tprivate initGame(): void {\n\t\tthis.loadHighscore();\n\t\n\t\tthis.gameOverText.setText(\"\");\n\t\tthis.restartText.setText(\"\");\n\n\t\tthis.currentBlock.setShape(-1, 0);\n\t\tthis.lastMoveTime = Date.now();\n\t\tthis.isGameOver = false;\n\t\tthis.score = 0;\n\n\t\tfor (let i = 0; i < 3; ++i) {\n\t\t\tthis.nextShape[i] = Utilities.getRandomShape();\n\t\t\tthis.nextColor[i] = Utilities.getRandomColor();\n\t\t}\n\t\tthis.refreshNextBlocks();\n\t\n\t\tfor (let x = 0; x < Config.width; ++x) {\n\t\t\tthis.gameArea[x] = [];\n\t\t\tfor (let y = 0; y < Config.height; ++y) {\n\t\t\t\tthis.changeBlock(x, y, -1);\n\t\t\t}\n\t\t}\t\n\t}\n\n\tpublic update(): void {\n\t\tthis.updateInput();\n\n\t\tif (this.isGameOver)\n\t\t\treturn;\n\n\t\tif (this.currentBlock.shape == -1)\n\t\t\tthis.createNewBlock();\n\n\t\t// increase fall speed to make game more difficult as time progress\n\t\tthis.fallSpeed = 10 + Math.floor(this.score / 200) * 10\n\n\t\tif (Date.now() - this.lastMoveTime > this.moveUpdateDelay) {\n\t\t\tthis.lastMoveTime = Date.now();\n\t\t\tthis.tryMoveCurrentBlock();\n\t\t}\n\n\t\tthis.tryRemoveFullRows();\n\n\t\tif (this.previousScore != this.score) {\n\t\t\tthis.scoreText.setText(\"SCORE\\n\" + this.score);\n\t\t\tthis.previousScore = this.score;\n\t\t}\n\t}\n\n\tprivate createNewBlock(): void {\n\t\tthis.currentBlock.setShape(this.nextShape[0], 0);\n\t\tthis.currentBlock.setPosition(Config.width / 2, Config.height + 1);\n\t\tthis.currentBlock.setColor(this.nextColor[0]);\n\n\t\tthis.nextShape[0] = this.nextShape[1];\n\t\tthis.nextShape[1] = this.nextShape[2];\n\t\tthis.nextShape[2] = Utilities.getRandomShape();\n\t\t\n\t\tthis.nextColor[0] = this.nextColor[1];\n\t\tthis.nextColor[1] = this.nextColor[2];\n\t\tthis.nextColor[2] = Utilities.getRandomColor();\n\n\t\tthis.refreshNextBlocks();\n\t}\n\t\n\tprivate refreshNextBlocks(): void {\n\t\tfor (let i = 0; i < 3; ++i) {\n\t\t\tif (this.nextBlock[i] == null) {\n\t\t\t\tthis.nextBlock[i] = new Block(this.nextShape[i], 0, 13 + i * 3, Config.height - 3, this.nextColor[i], this);\t\t\t\t\n\t\t\t\tthis.nextBlock[i].init();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.nextBlock[i].setShape(this.nextShape[i], 0); \n\t\t\t\tthis.nextBlock[i].setColor(this.nextColor[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateInput(): void {\n\t\tif (this.isGameOver)\n\t\t{\n\t\t\tif (Phaser.Input.Keyboard.JustDown(this.enterKey))\n\t\t\t\tthis.initGame();\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst isPressLeft = Phaser.Input.Keyboard.JustDown(this.leftKey);\n\t\tconst isPressRight = Phaser.Input.Keyboard.JustDown(this.rightKey);\n\t\tconst isPressUp = Phaser.Input.Keyboard.JustDown(this.upKey);\n\n\t\tif (isPressLeft || (this.leftKey.isDown && Date.now() - this.leftTimer > 120)) {\n\t\t\tthis.leftTimer = Date.now();\n\t\t\tif (!this.isBlockCollide(this.currentBlock.x - 1, this.currentBlock.y, this.currentBlock.shape, this.currentBlock.rotation))\n\t\t\t\tthis.currentBlock.setPosition(this.currentBlock.x - 1, this.currentBlock.y);\n\t\t}\n\t\t\t\n\t\tif (isPressRight || (this.rightKey.isDown && Date.now() - this.rightTimer > 120)) {\n\t\t\tthis.rightTimer = Date.now();\n\t\t\tif (!this.isBlockCollide(this.currentBlock.x + 1, this.currentBlock.y, this.currentBlock.shape, this.currentBlock.rotation))\n\t\t\t\tthis.currentBlock.setPosition(this.currentBlock.x + 1, this.currentBlock.y);\n\t\t}\n\t\t\t\n\t\tif (isPressUp) {\n\t\t\tif (!this.isBlockCollide(this.currentBlock.x, this.currentBlock.y, this.currentBlock.shape, this.currentBlock.rotation + 1))\n\t\t\t\tthis.currentBlock.setShape(this.currentBlock.shape, (this.currentBlock.rotation + 1) % 4);\n\t\t}\n\t\t\t\n\t\tif (this.downKey.isDown)\n\t\t\tthis.moveUpdateDelay = 50;\n\t\telse \n\t\t\tthis.moveUpdateDelay = Math.max(500 - this.fallSpeed, 50);\n\t}\n\n\tprivate tryMoveCurrentBlock(): void {\n\t\tif (!this.isBlockCollide(this.currentBlock.x, this.currentBlock.y - 1, this.currentBlock.shape, this.currentBlock.rotation))\n\t\t\tthis.currentBlock.setPosition(this.currentBlock.x, this.currentBlock.y - 1);\n\t\telse\n\t\t\tthis.handleCollision();\n\t}\n\n\tprivate handleCollision(): void {\n\t\tfor (let dx = -2; dx < 2; ++dx) {\n\t\t\tfor (let dy = -2; dy < 2; ++dy) {\n\t\t\t\tif (Block.shapes[this.currentBlock.shape][this.currentBlock.rotation][dx+2][dy+2] != 0)\n\t\t\t\t{\n\t\t\t\t\tif (this.currentBlock.x + dx < 0 ||\n\t\t\t\t\t\tthis.currentBlock.x + dx >= Config.width ||\n\t\t\t\t\t\tthis.currentBlock.y + dy < 0)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\n\t\t\t\t\tif (this.currentBlock.y + dy >= Config.height) {\n\t\t\t\t\t\tthis.gameOver();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\t\t\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tthis.changeBlock(this.currentBlock.x+dx, this.currentBlock.y+dy, this.currentBlock.color + 4);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.currentBlock.shape = -1;\n\t\tif (!this.isGameOver)\n\t\t\tthis.score += 10;\n\t}\n\n\tprivate gameOver(): void {\n\t\tthis.isGameOver = true;\n\t\tthis.updateHighscore();\n\t\tthis.gameOverText.setText(\"GAME OVER\");\n\t\tthis.restartText.setText(\"Press ENTER to restart\");\n\t}\n\n\tprivate isBlockCollide(x: number, y: number, shape: number, rotation: number): boolean\n\t{\n\t\tif (rotation > 3) \n\t\t\trotation = 0;\n\n\t\tfor (let dx = -2; dx < 2; ++dx) {\n\t\t\tfor (let dy = -2; dy < 2; ++dy) {\n\t\t\t\tif (Block.shapes[shape][rotation][dx+2][dy+2] == 0)\n\t\t\t\t\tcontinue;\n\t\t\t\t\n\t\t\t\t// check if outside\n\t\t\t\tif (x + dx < 0 ||\n\t\t\t\t\tx + dx > Config.width - 1 ||\n\t\t\t\t\ty + dy < 0)\n\t\t\t\t\treturn true;\n\t\t\t\t\n\t\t\t\t// check if collide to already existing blocks\n\t\t\t\tif (y + dy < Config.height && this.gameArea[x + dx][y + dy] != -1)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\t\n\n\tprivate tryRemoveFullRows(): void {\n\t\tlet completeRowCount = 0;\n\t\tfor (let y = 0; y < Config.height; ++y)\n\t\t{\n\t\t\tlet isRowComplete = true;\n\t\t\tfor (let x = 0; x < Config.width; ++x)\n\t\t\t{\n\t\t\t\tif (this.gameArea[x][y] == -1)\n\t\t\t\t\tisRowComplete = false;\n\t\t\t}\n\t\t\tif (!isRowComplete)\n\t\t\t\tcontinue;\n\t\t\t\n\t\t\t++completeRowCount;\n\n\t\t\t// move rows down\n\t\t\tfor (let iy = y; iy < Config.height; ++iy) {\n\t\t\t\tfor (let  ix = 0; ix < Config.width; ++ix) {\n\t\t\t\t\tif (iy == Config.height - 1)\n\t\t\t\t\t\tthis.changeBlock(ix, iy, -1);\n\t\t\t\t\telse\n\t\t\t\t\t\tthis.changeBlock(ix, iy, this.gameArea[ix][iy+1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (completeRowCount == 1)\n\t\t\tthis.score += 100;\n\t\telse if (completeRowCount == 2)\n\t\t\tthis.score += 300;\n\t\telse if (completeRowCount == 3)\n\t\t\tthis.score += 600;\n\t\telse if (completeRowCount >= 4)\n\t\t\tthis.score += 1000;\n\t}\n\n\tprivate changeBlock(x: number, y: number, changeTo: number) {\n\t\tthis.gameArea[x][y] = changeTo;\n\t\tif (changeTo == -1)\n\t\t\tthis.layer.putTileAt(Config.emptyBlockIx, x + 1, Config.height - y - 1);\n\t\telse\n\t\t\tthis.layer.putTileAt(changeTo, x + 1, Config.height - y - 1);\n\t}\n\n\tprivate loadHighscore(): void {\n\t\t// TODO: load score from save file\n\t}\n\n\tprivate updateHighscore(): void {\n\t\tif (this.highscore < this.score) {\n\t\t\tthis.highscore = this.score;\n\t\t\tthis.highscoreText.setText(\"HI-SCORE\\n\" + this.highscore);\n\t\t}\n\t}\t\n}\n","import Utilities from \"../Utilities\";\nimport MainGame from \"./MainGame\";\nimport MainSettings from \"./MainSettings\";\n\nexport default class MainMenu extends Phaser.Scene {\n\tpublic static Name = \"MainMenu\";\n\n\tpublic create(): void {\n\t\tUtilities.LogSceneMethodEntry(\"MainMenu\", \"create\");\n\t\tconst textYPosition = this.cameras.main.height / 3;\n\n\t\tconst newGameText = this.add.text(this.cameras.main.centerX, textYPosition, \"Start\");\n\t\tnewGameText\n\t\t\t.setFontFamily(\"monospace\")\n\t\t\t.setFontSize(40)\n\t\t\t.setFill(\"#fff\")\n\t\t\t.setAlign(\"center\")\n\t\t\t.setOrigin(0.5);\n\t\tnewGameText.setInteractive();\n\t\tnewGameText.on(\"pointerdown\", () => { this.scene.start(MainGame.Name); }, this);\n\n\t\tconst settingsText = this.add.text(this.cameras.main.centerX, textYPosition * 2, \"Settings\");\n\t\tsettingsText.setOrigin(0.5);\n\t\tsettingsText.setFontFamily(\"monospace\").setFontSize(30).setFill(\"#fff\");\n\t\tsettingsText.setInteractive();\n\t\tsettingsText.on(\"pointerdown\", () => { this.scene.start(MainSettings.Name); }, this);\n\t}\n}\n","import Utilities from \"../Utilities\";\nimport MainMenu from \"./MainMenu\";\n\nexport default class MainSettings extends Phaser.Scene {\n\tpublic static Name = \"MainSettings\";\n\n\tpublic create(): void {\n\t\tUtilities.LogSceneMethodEntry(\"MainSettings\", \"create\");\n\t\tconst startYPosition = this.cameras.main.height / 4;\n\t\tconst fontSize = 25;\n\n\t\t// Add a button to return to the main menu.\n\t\tconst backText = this.add.text(this.cameras.main.centerX, startYPosition * 2, \"Go Back\");\n\t\tbackText\n\t\t\t.setOrigin(0.5)\n\t\t\t.setFontFamily(\"monospace\").setFontSize(fontSize).setFill(\"#fff\")\n\t\t\t.setInteractive();\n\t\tbackText.on(\"pointerdown\", () => { this.scene.start(MainMenu.Name); }, this);\n\t}\n}\n","import SplashScreen from \"./SplashScreen\";\nimport Utilities from \"../Utilities\";\n\nexport default class Preloader extends Phaser.Scene {\n\tpublic static Name = \"Preloader\";\n\n\tpublic preload(): void {\n\t\tthis.load.path = \"assets/\";\n\t\tthis.load.image(\"phaser_pixel_medium_flat\");\n\t\tthis.load.image(\"Phaser-Logo-Small\");\n\t\tthis.load.image(\"background\");\n\t\tthis.load.spritesheet('blocks', 'blocks.png', { frameWidth: 24, frameHeight: 24 });\n\t}\n\n\tpublic create(): void {\n\t\tUtilities.LogSceneMethodEntry(\"Preloader\", \"create\");\n\t\tthis.scene.start(SplashScreen.Name);\n\t}\n}\n","import Utilities from \"../Utilities\";\nimport MainGame from \"./MainGame\";\n\nexport default class SplashScreen extends Phaser.Scene {\n\tpublic static Name = \"SplashScreen\";\n\n\tpublic preload(): void {\n\t\tthis.load.path = \"assets/\";\n\t}\n\n\tpublic create(): void {\n\t\tUtilities.LogSceneMethodEntry(\"SplashScreen\", \"create\");\n\n\t\tconst titleText = this.add.text(this.cameras.main.centerX, this.cameras.main.centerY * 0.5, \"TypeScript Tetris\\nby\\nAntti Alkkiomäki\", { align: \"center\"})\n\t\t\t.setOrigin(0.5, 0)\n\t\t\t.setFontFamily(\"monospace\").setFontSize(26).setFill(\"#fff\");\n\n\t\tconst poweredByText = this.add.text(this.cameras.main.centerX, this.cameras.main.centerY - 25, \"Powered By\");\n\t\tpoweredByText.setOrigin(0.5, 0.5);\n\t\tpoweredByText.setFontFamily(\"monospace\").setFontSize(20).setFill(\"#fff\");\n\t\tthis.add.image(this.cameras.main.centerX, this.cameras.main.centerY, \"phaser_pixel_medium_flat\");\n\n\t\tthis.input.setDefaultCursor(\"pointer\");\n\t\tthis.input.on(\"pointerdown\", this.startGame, this);\n\n\t\tthis.time.addEvent({\n\t\t\tdelay: 5000,\n\t\t\tcallback: this.startGame,\n\t\t\tcallbackScope: this,\n\t\t\tloop: false\n\t\t});\n\t}\n\n\tprivate startGame(): void {\n\t\tthis.scene.start(MainGame.Name);\n\t}\n}\n","export default class Utilities {\n\t/**\n\t * Logs a particular message to the console.\n\t * @param message Message to log.\n\t */\n\tpublic static Log(message: string): void {\n\t\tconsole.log((new Date()).toISOString() + \" : \" + message);\n\t}\n\n\t/**\n\t * Logs the start of a method in a scene.\n\t * @param sceneName Name of the scene.\n\t * @param method Method called within the scene.\n\t */\n\tpublic static LogSceneMethodEntry(sceneName: string, method: string): void {\n\t\tthis.Log(\"Entered \" + sceneName + \" \" + method + \"()\");\n\t}\n\n\tpublic static getRandom(min, max) { \n\t\treturn Math.floor(Math.random() * (max - min) + min)\n\t}\n\n\tpublic static getRandomShape() {\n\t\treturn Utilities.getRandom(0, 7);\n\t}\n\n\tpublic static getRandomColor() { \n\t\treturn Utilities.getRandom(0, 4);\n\t}\n}\n","module.exports = Phaser;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(862);\n"],"names":["Block","constructor","shape","rotation","x","y","color","game","images","init","this","add","image","blockSize","setPosition","setShape","setColor","emptyBlockIx","setFrame","offset","getTileMapOffset","dy","dx","setX","setY","height","setAlpha","isBlock","shapes","Config","width","borderBlockIx","gameConfig","type","Phaser","AUTO","parent","title","Game","config","LogSceneMethodEntry","super","scene","Name","start","window","onload","Boot","Scene","preload","create","MainGame","gameArea","currentBlock","nextBlock","nextShape","nextColor","moveUpdateDelay","fallSpeed","isGameOver","leftTimer","rightTimer","score","previousScore","highscore","cameras","main","centerX","centerY","createTileMap","createTexts","initGame","enterKey","input","keyboard","addKey","Input","Keyboard","KeyCodes","ENTER","leftKey","LEFT","rightKey","RIGHT","upKey","UP","downKey","DOWN","map","make","tilemap","tileWidth","tileHeight","tiles","addTilesetImage","layer","createBlankLayer","fill","highscoreText","text","align","setFontFamily","setFontSize","setFill","scoreText","gameOverText","restartText","setOrigin","loadHighscore","setText","lastMoveTime","Date","now","i","getRandomShape","getRandomColor","refreshNextBlocks","changeBlock","update","updateInput","createNewBlock","Math","floor","tryMoveCurrentBlock","tryRemoveFullRows","JustDown","isPressLeft","isPressRight","isPressUp","isDown","isBlockCollide","max","handleCollision","gameOver","updateHighscore","completeRowCount","isRowComplete","iy","ix","changeTo","putTileAt","MainMenu","textYPosition","newGameText","setAlign","setInteractive","on","settingsText","MainSettings","startYPosition","backText","Preloader","load","path","spritesheet","frameWidth","frameHeight","SplashScreen","poweredByText","setDefaultCursor","startGame","time","addEvent","delay","callback","callbackScope","loop","Utilities","static","message","console","log","toISOString","sceneName","method","Log","min","random","getRandom","module","exports","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}